version: 0.2
run-as: root

phases:
  pre_build:
    commands:
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - echo AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - echo IMAGE_REPO_NAME=$IMAGE_REPO_NAME
      - echo S3_LOTTO_DOTENV_BUCKET_NAME=$S3_LOTTO_DOTENV_BUCKET_NAME
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - aws s3 cp s3://$S3_LOTTO_DOTENV_BUCKET_NAME/.env.development .env
      - cat .env
      - docker build --platform=linux/amd64 -t $IMAGE_REPO_NAME:$IMAGE_TAG -f "${DOCKER_FILE_PATH}" .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - target/*.jar
    - scripts/*.sh
    - appspec.yml
    - imagedefinitions.json
  discard-paths: yes

cache:
  paths:
    - 'node_modules/**/*' # Cache `node_modules` for faster `yarn` or `npm i`
    - '.next/cache/**/*' # Cache Next.js for faster application rebuilds